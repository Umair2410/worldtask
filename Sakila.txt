#STEP 1 List all actors
SELECT * FROM actor;
#STEP 2 Find all surnames of the actor with the forename "John"
SELECT first_name, last_name FROM actor WHERE first_name ="John";
#STEP 3 Find all actors with surname 'Neeson'.
SELECT first_name, last_name FROM actor WHERE last_name ="Neeson";
#STEP 4 Find all actors with ID numbers divisible by 10.
SELECT actor_id, first_name, last_name FROM actor where actor_id LIKE "%0";
#STEP 5 What is the description of the movie with an ID of 100?
SELECT film_id, title, description FROM film WHERE film_id ="100";
#STEP 6 Find every R-rated movie.
SELECT * FROM film_list;
SELECT FID, title, rating FROM film_list WHERE rating ="R";
#STEP 7 Find every non-R-rated movie.
SELECT fid, title, rating FROM film_list WHERE rating NOT LIKE "r%";
#STEP 8 Find the ten shortest movies.
SELECT fid, title, length FROM film_list ORDER BY length LIMIT 10;
#STEP 9 Find the movies with the longest runtime, without using LIMIT.
SELECT title, length FROM film_list WHERE length = ( SELECT MAX(length) FROM film);
#STEP 10 Find all movies that have deleted scenes.
SELECT title, description, special_features FROM film WHERE special_features ="deleted scenes";
#STEP 11 Using HAVING, reverse-alphabetically list the last names that are not repeated.
SELECT COUNT(last_name), last_name FROM actor GROUP BY last_name HAVING COUNT(last_name)=1 ORDER BY last_name DESC;
#STEP 12 Using HAVING, list the last names that appear more than once, from highest to lowest frequency.
SELECT COUNT(last_name), last_name FROM actor GROUP BY last_name HAVING COUNT(last_name)>1 ORDER BY COUNT(last_name)DESC;
#STEP 13 Which actor has appeared in the most films?
SELECT actor_id, COUNT(film_id) FROM film_actor GROUP BY actor_id HAVING COUNT(film_id)>1 ORDER BY COUNT(actor_id)DESC;
#STEP 14 When is 'Academy Dinosaur' due?
SELECT f.title, DATE_ADD(r.rental_date, INTERVAL f.rental_duration DAY) AS due_date FROM film f JOIN inventory i ON i.film_id=f.film_id JOIN rental r ON r.inventory_id = i.inventory_id WHERE f.title = 'Academy Dinosaur' AND r.return_date IS NULL;
#STEP 15 What is the average runtime of all films?      
SELECT AVG(length) FROM film;
#STEP 16 List the average runtime for every film category.
SELECT category, AVG(length) FROM film_list GROUP BY category HAVING AVG(length) ORDER BY category;
#STEP 17 List all movies featuring a robot.
SELECT title, description FROM film_list WHERE description LIKE "%robot%";
#STEP 18 How many movies were released in 2010?
SELECT COUNT(title), release_year FROM film WHERE release_year LIKE "2010%";